. /etc/init.d/functions.sh


A=`dirname $0`
A=`dirname $A`
A=`dirname $A`
ACCOUNT=`basename $A`


start_account() {
    NAME=$1
    ebegin "Creating user account for ${ACCOUNT} as necessary"
    id ${ACCOUNT} &> /dev/null || useradd -c "${NAME}" -d /home/${ACCOUNT} -G users -s /bin/bash -U ${ACCOUNT}
    eend $? "Unable to create account."
}

stop_account() {
    ebegin "Removing user account"
    # userdel ${ACCOUNT}
    eend
}


start_secure() {
    ebegin "Assigning file ownership to account"
    chown -R ${ACCOUNT} /home/${ACCOUNT}
    eend $? "Error updating file ownership."
    
    ebegin "Updating file permissions"
    find /home/${ACCOUNT} -type d -exec chmod 2775 {} \;
    find /home/${ACCOUNT} -type f -exec chmod 664 {} \;
    chmod 770 /home/${ACCOUNT}/.ssh
    chmod 660 /home/${ACCOUNT}/.ssh/*
    eend
    
    ebegin "Securing protected files and folders"
    chown -R root:wheel /home/${ACCOUNT}/{etc/{init.d,logrotate.d,nginx},var/mysql}
    chown -R nginx /home/${ACCOUNT}/etc/nginx
    chown -R mysql:${ACCOUNT} /home/${ACCOUNT}/var/mysql
    find /home/${ACCOUNT}/{etc/{init.d,logrotate.d,nginx},var/mysql} -type d -exec chmod 2770 {} \;
    find /home/${ACCOUNT}/{etc/{logrotate.d,nginx},var/mysql} -type f -exec chmod 660 {} \;
    find /home/${ACCOUNT}/etc/init.d -type f -exec chmod 770 {} \;
    eend
}


start_mysql() {
    einfo "Attaching MySQL databases..."
    
    rm -f /home/${ACCOUNT}/.query.sql
    touch /home/${ACCOUNT}/.query.sql
    chmod 600 /home/${ACCOUNT}/.query.sql
    
    for db in `ls /home/${ACCOUNT}/var/mysql` ; do
        PASS=`cat /home/${ACCOUNT}/var/mysql/${db}/db.pw | tr -d '\n'`
        
        ebegin "Attaching MySQL database ${db}"
        
        if [ "$db" == "$ACCOUNT" ] ; then
            ln -sf /home/${ACCOUNT}/var/mysql/${db} /var/lib/mysql/${db}
            echo "GRANT ALL ON TABLE \`${db}\`.* TO '${db}'@'localhost' IDENTIFIED BY '${PASS}';" >> /home/${ACCOUNT}/.query.sql
            echo "GRANT ALL ON TABLE \`${db}\_%\`.* TO '${db}'@'localhost' IDENTIFIED BY '${PASS}';" >> /home/${ACCOUNT}/.query.sql
        else
            ln -sf /home/${ACCOUNT}/var/mysql/${db} /var/lib/mysql/${ACCOUNT}_${db}
            echo "GRANT ALL ON TABLE \`${ACCOUNT}\_${db}\`.* TO '${ACCOUNT}_${db}'@'localhost' IDENTIFIED BY '${PASS}';" >> /home/${ACCOUNT}/.query.sql
        fi
        
        eend
    done
    
    echo "FLUSH PRIVILEGES;" >> /home/${ACCOUNT}/.query.sql
    
    mysql < /home/${ACCOUNT}/.query.sql
    
    rm /home/${ACCOUNT}/.query.sql
}

stop_mysql() {
    einfo "Detaching MySQL databases..."
    
    rm -f /home/${ACCOUNT}/.query.sql
    touch /home/${ACCOUNT}/.query.sql
    chmod 600 /home/${ACCOUNT}/.query.sql
    
    for db in `ls /home/${ACCOUNT}/var/mysql` ; do
        ebegin "Detaching MySQL database ${db}"
        
        if [ "$db" == "$ACCOUNT" ] ; then
            rm /var/lib/mysql/${db}
            echo "REVOKE ALL PRIVILEGES, GRANT OPTION FROM '${db}'@'localhost';" >> /home/${ACCOUNT}/.query.sql
            echo "DROP USER '${db}'@'localhost';" >> /home/${ACCOUNT}/.query.sql
        else
            rm /var/lib/mysql/${ACCOUNT}_${db}
            echo "REVOKE ALL PRIVILEGES, GRANT OPTION FROM '${ACCOUNT}_${db}'@'localhost';" >> /home/${ACCOUNT}/.query.sql
            echo "DROP USER '${ACCOUNT}_${db}'@'localhost';" >> /home/${ACCOUNT}/.query.sql
        fi
        
        eend
    done
    
    echo "FLUSH PRIVILEGES;" >> /home/${ACCOUNT}/.query.sql
    
    mysql < /home/${ACCOUNT}/.query.sql
    
    rm /home/${ACCOUNT}/.query.sql
}


start_services() {
    einfo "Starting services..."
}

stop_services() {
    einfo "Stopping services..."
}


run() {
    ebegin "Checking configuration"
    checkconfig
    eend $? || exit $?
    
    case "$1" in
        start)
            if [[ -e "`dirname $0`/.`basename $0`" ]]; then
                echo "This account has already been attached."
                exit 3
            fi
            
            touch `dirname $0`/.`basename $0`
            
            start
            ;;
        
        stop)
            if [[ ! -e "`dirname $0`/.`basename $0`" ]]; then
                echo "This account has not been attached yet."
                exit 2
            fi
            
            rm `dirname $0`/.`basename $0`
            
            stop
            ;;
        
        zap)
            ebegin "Clearing runtime state"
            rm -f `dirname $0`/.`basename $0`
            eend $?
            ;;
        
        status)
            status
            ;;
        
        restart|reload|condrestart)
            stop
            start
            ;;
        
        *)
            echo $"Usage: $0 {start|stop|restart|reload|status|zap}"
            exit 1
    esac
    
    exit 0
}
